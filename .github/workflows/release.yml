name: Package and Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  BASE_NAME: LangGraph-GUI  # Change this variable for different projects

jobs:
  package-code:
    runs-on: ubuntu-latest  # or any OS you prefer as we're packaging codebase only
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'  # This will recursively clone submodules
        fetch-depth: 0  # Fetch all history for .GitInfo and .Lastmod

    - name: Create zip file
      run: |
        zip -r ${{ env.BASE_NAME }}.zip ./*

    - name: Upload release asset
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.BASE_NAME }}-code
        path: ${{ env.BASE_NAME }}.zip

  release:
    runs-on: ubuntu-latest
    needs: package-code
    steps:
    - name: Download code artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ env.BASE_NAME }}-code
        path: code

    - name: Get release ID
      id: get_release
      run: |
        response=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}")
        release_id=$(echo $response | jq -r '.id')
        echo "RELEASE_ID=$release_id" >> $GITHUB_ENV

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}/assets?name=${{ env.BASE_NAME }}.zip
        asset_path: ./code/${{ env.BASE_NAME }}.zip
        asset_name: ${{ env.BASE_NAME }}.zip
        asset_content_type: application/zip
